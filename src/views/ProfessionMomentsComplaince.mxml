<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		creationComplete="init()"
		chromeColor="#DDDDDD" 
		>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.DataGridDataExporter;
			import com.FileUtils;
			import com.semmel.Constants;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.graphics.IFill;
			import mx.rpc.xml.SimpleXMLDecoder;
			
			import spark.primitives.supportClasses.FilledElement;
			
			import de.polygonal.ds.HashMap;
			
			[Bindable]
			public var professionCompliance:ArrayCollection;
			public var wardCompliance:ArrayCollection;
			public var who_safety:ArrayCollection = null;
			public var who_safety_department:ArrayCollection = null;
			public var acAllNodes:ArrayCollection = new ArrayCollection();
			public var arrFlag:Array = [];
			public var lblData:Array = [];
			public var orderNum=0;
			public var orderCnt=0;
			private function eventGrid(evt:Event):void{
//				this.dataGrid.dataProvider = professionCompliance;
				var selected:int = dataGrid.selectedIndex;
				var flag:Number = 0;
				var dataPoint:String = this.acAllNodes.getItemAt(dataGrid.selectedIndex).prof;
				var raw:String = "";
				var s:String = "";
				var file:File = File.applicationStorageDirectory.resolvePath("rawdata_" + Constants.getHospitalId() + "_" + this.parentApplication.selectedYM + ".shard");
//				trace("data point:"+dataPoint);
				if(file.exists){
					try{
						var stream:FileStream = new FileStream()
						stream.open(file, FileMode.READ);
						raw = stream.readUTFBytes(stream.bytesAvailable).toString();
						stream.close();
						
						s =raw;// "<?xml version=\"1.0\" encoding=\"UTF-8\"?><report>" + AESCrypto.decrypt(raw, Constants.getLicenseKey().substring(0,16)) + "</report>";
						//trace("dec: " + s);
						
					}catch(e:Error){
						trace("e: " + e.toString());
					}
				}
				var jsonRaw = JSON.parse(s);
				this.who_safety = new ArrayCollection(jsonRaw["who_safety"]);
				this.who_safety_department = new ArrayCollection(jsonRaw["who_safety_department"]);
				var queryYM = this.parentApplication.selectedYM;
				
				var acAnalytic:ArrayCollection = new ArrayCollection();
				var hm:HashMap = new HashMap();
				
				var prof:Object=new Object();
				var obj:Object;
				
				//for complaince rate
				var overAllCnt:Number = 0;
				
				var acSurveyID:ArrayCollection = new ArrayCollection();
				for(var index:Number=0; index<this.who_safety_department.length; index++){
					if(this.who_safety_department[index].prof1 == dataPoint||this.who_safety_department[index].prof2 == dataPoint||this.who_safety_department[index].prof3 == dataPoint||this.who_safety_department[index].prof4 == dataPoint){flag=1;}
				}
//				trace("flag:"+flag);
				if(flag==1 && arrFlag[dataPoint]==true){
//					acAllNodes = new ArrayCollection();
//					acAllNodes = professionCompliance;
//					this.dataGrid.dataProvider = acAllNodes;
//					trace("acAllNodes:"+acAllNodes.toString());
//					fetchLocalXML();
					for(var i:Number=0;i<this.who_safety_department.length;i++){
						obj = this.who_safety_department.getItemAt(i);						
						if((obj.prof1==dataPoint||obj.prof2==dataPoint||obj.prof3==dataPoint||obj.prof4==dataPoint) && obj.end_date.toString().replace("-0","").replace("-","").indexOf(queryYM)!=-1){
							if(!acSurveyID.contains(obj.survey_id)){
								acSurveyID.addItem(obj.survey_id);
							}
						}
					}
					
					trace("start doing iterate...");
					//for loop hash map
					trace("Sz: " + String(acSurveyID.length));
					var unique:Object = {};
					var value:String;
					var array:Array = who_safety_department.source;
					var result:Array = [];
					for each(var surveyID:Object in acSurveyID){
						//					trace("surveyID " + surveyID);
						for(var i:Number=0;i<this.who_safety_department.length;i++){
							obj = this.who_safety_department.getItemAt(i);
							if(obj.survey_id==surveyID && obj.end_date.toString().replace("-0","").replace("-","").indexOf(queryYM)!=-1){
								value = array[i].dept;
								if (!unique[value])
								{
									unique[value] = true;
									
									var profession:Object = new Object();
									profession.prof = value;
									
									profession.hr1 = profession.hw1 = profession.glove1 = profession.missed1 = 0;
									profession.hr2 = profession.hw2 = profession.glove2 = profession.missed2 = 0;
									profession.hr3 = profession.hw3 = profession.glove3 = profession.missed3 = 0;
									profession.hr4 = profession.hw4 = profession.glove4 = profession.missed4 = 0;
									profession.hr5 = profession.hw5 = profession.glove5 = profession.missed5 = 0;
									
									profession.totalhwhr = 0;
									profession.totalmiss = 0;
									profession.totalmisswithglove = 0;
									profession.comply = 0;
									profession.noncomply = 0;
									
									result.push(profession);
								}
							}
						}
						var dept:String;
						for(var i:Number=0; i<who_safety_department.length; i++)
						{
							if(who_safety_department[i].survey_id == surveyID&&(who_safety_department[i].prof1==dataPoint||who_safety_department[i].prof2==dataPoint||who_safety_department[i].prof3==dataPoint||who_safety_department[i].prof4==dataPoint)){
								dept = who_safety_department[i].dept;
							}
						}
						wardCompliance = new ArrayCollection(result);
						for(var indi=1;indi<=5;indi++) {
							for(var j=0;j<wardCompliance.length;j++) {
								for(var k=0; k<who_safety.length; k++){
									if(wardCompliance[j].prof==dept&&int(who_safety[k].indi) == indi && who_safety[k].survey_id==surveyID&&who_safety[k].prof==dataPoint) {
										//									var j=1;
										trace("wardcom:"+wardCompliance[j].prof+":"+dataPoint+":"+who_safety[k].prof+":"+indi+":"+surveyID);
										wardCompliance[j]['hr'+indi] = Number(wardCompliance[j]['hr'+indi]) + Number(who_safety[k].hr);
										wardCompliance[j]['hw'+indi] = Number(wardCompliance[j]['hw'+indi]) + Number(who_safety[k].hw);
										if(Number(who_safety[k].glove)==1&&Number(who_safety[k].missed)==1){
											wardCompliance[j]['glove'+indi] = Number(wardCompliance[j]['glove'+indi]) + Number(who_safety[k].glove);
										}
										if(Number(who_safety[k].glove)==0&&Number(who_safety[k].missed)==1){
											wardCompliance[j]['missed'+indi] = Number(wardCompliance[j]['missed'+indi]) + Number(who_safety[k].missed);
										}
									}
									//									arr[j]=false;
								}
							}
																//End Complaince
						}
					}
					for(var indi=1; indi<=5; indi++)
					{
						for(var j=0;j<wardCompliance.length;j++) {
							wardCompliance[j].totalhwhr  += Number(wardCompliance[j]['hr'+indi]) + Number(wardCompliance[j]['hw'+indi]);
							wardCompliance[j].totalmiss += Number(wardCompliance[j]['missed'+indi]);
							wardCompliance[j].totalmisswithglove += Number(wardCompliance[j]['glove'+indi]);
							
							var comply:Number = (Number(wardCompliance[j].totalhwhr) * 100)/(Number(wardCompliance[j].totalhwhr)+Number(wardCompliance[j].totalmiss)+Number(wardCompliance[j].totalmisswithglove));
							var noncomply:Number = 100 - comply;
							
							comply = Math.round(comply * 100)/100;
							noncomply = Math.round(noncomply * 100)/100;
							
							wardCompliance[j].comply = comply;
							wardCompliance[j].noncomply = noncomply;
							
						}
					}
/*					var v:Vector.<int>;
					if(this.orderNum+this.orderCnt<dataGrid.selectedIndex){
						trace("big");
						trace("index:"+dataGrid.selectedIndex);
						this.orderNum = dataGrid.selectedIndex-this.orderCnt;
						this.acAllNodes.addAllAt(wardCompliance,dataGrid.selectedIndex+1-this.orderCnt);
						this.orderCnt = wardCompliance.length;
						trace("cnt:"+orderCnt);
						trace("num:"+orderNum);
						v = new Vector.<int>(orderCnt);
//						var v:Vector.<int> = new Vector.<int>(orderCnt);
						for(var row:Number = this.orderNum; row<orderNum+orderCnt; row++)
						{
							v[row-this.orderNum] = row+1;
						}
						trace("v:",v.toString());
					}
					else{
						trace("small");
						this.orderNum = dataGrid.selectedIndex;
						this.acAllNodes.addAllAt(wardCompliance,dataGrid.selectedIndex+1);
						this.orderCnt = wardCompliance.length;
						v = new Vector.<int>(orderCnt);
						trace("index:"+dataGrid.selectedIndex);
						trace("cnt:"+orderCnt);
						trace("num:"+orderNum);
						for(var row:Number = this.orderNum+1; row<=orderNum+orderCnt; row++)
						{
							v[row-this.orderNum-1] = row;
						}
						trace("v:",v.toString());
					}*/
					this.acAllNodes.addAllAt(wardCompliance,dataGrid.selectedIndex+1);
					arrFlag[dataPoint+"cnt"] = wardCompliance.length;
					dataGrid.dataProvider = this.acAllNodes;
					arrFlag[dataPoint] = false;
//					dataGrid.selectedIndices = v;
				}
				else if(flag==1 && arrFlag[dataPoint]==false)
				{
					for(var i=0; i<arrFlag[dataPoint+"cnt"]; i++){
						this.acAllNodes.removeItemAt(dataGrid.selectedIndex+1);
					}
					arrFlag[dataPoint] = true;
				}
				var v:Vector.<int> = new Vector.<int>(orderCnt);
				var cnt:Number=0;
				for(var row:Number = 0; row<acAllNodes.length; row++)
				{
					if(arrFlag[acAllNodes[row].prof]==true||arrFlag[acAllNodes[row].prof]==false){
						v[cnt] = row;
						cnt++;
					}
				}
//				trace("v:",v.toString());
				dataGrid.selectedIndices = v;
				trace("v:",dataGrid.selectedIndex);
			}
			public function init(){
				this.fetchLocalXML();
			}
			public function fetchLocalXML():void{
//				if(this.parentApplication.fetchXMLData!=""){
					//try{
				professionCompliance = new ArrayCollection();
						var raw:String = "";
						var s:String = "";
						var file:File = File.applicationStorageDirectory.resolvePath("rawdata_" + Constants.getHospitalId() + "_" + this.parentApplication.selectedYM + ".shard");
						if(file.exists){
							try{
								var stream:FileStream = new FileStream()
								stream.open(file, FileMode.READ);
								raw = stream.readUTFBytes(stream.bytesAvailable).toString();
								stream.close();
								
								s =raw;// "<?xml version=\"1.0\" encoding=\"UTF-8\"?><report>" + AESCrypto.decrypt(raw, Constants.getLicenseKey().substring(0,16)) + "</report>";
//								trace("decaa: " + s);
								
							}catch(e:Error){
								trace("e: " + e.toString());
							}
						
						
						
						
//						var xml:XML = new XML(s);
						
						var jsonRaw = JSON.parse(s);
//						trace("jsonRaw raw:"+s);
						var who_safety:ArrayCollection = new ArrayCollection(jsonRaw["who_safety"]);
						
						//var oooFilter:String = "infectioncontrol_20146";
						
						if(this.parentApplication.selectedYM!=""){
							
							//var ob:String = this.parentApplication.selectedObserver + "_" + this.parentApplication.selectedYM;
							var ob:String = this.parentApplication.selectedYM;
							
							
							//this.xmlDatagrid = new XMLListCollection(xml.deptComp.(@ob==this.obFilter).deptc);
//							this.xmlDatagrid = new XMLListCollection(xml.deptComp.(@ob==ob).deptc);
//							dataGrid.dataProvider = this.xmlDatagrid;
							
							
							var unique:Object = {};
							var value:String;
							var array:Array = who_safety.source;
							var result:Array = [];
							var i:int = 0;
							var n:int = array.length;
							for (i; i < n; i++)
							{
								value = array[i].prof;
								if (!unique[value])
								{
									unique[value] = true;
									
									var profession:Object = new Object();
									profession.prof = value;
									
									profession.hr1 = profession.hw1 = profession.glove1 = profession.missed1 = 0;
									profession.hr2 = profession.hw2 = profession.glove2 = profession.missed2 = 0;
									profession.hr3 = profession.hw3 = profession.glove3 = profession.missed3 = 0;
									profession.hr4 = profession.hw4 = profession.glove4 = profession.missed4 = 0;
									profession.hr5 = profession.hw5 = profession.glove5 = profession.missed5 = 0;
									
									profession.totalhwhr = 0;
									profession.totalmiss = 0;
									profession.totalmisswithglove = 0;
									profession.comply = 0;
									profession.noncomply = 0;
									
									result.push(profession);
								}
								
							}
							
							professionCompliance = new ArrayCollection(result);
							
							var hw1Total:Number = 0;
							var hr1Total:Number = 0;
							var m1Total:Number = 0;
							var mg1Total:Number = 0;
							
							var hw2Total:Number = 0;
							var hr2Total:Number = 0;
							var m2Total:Number = 0;
							var mg2Total:Number = 0;
							
							var hw3Total:Number = 0;
							var hr3Total:Number = 0;
							var m3Total:Number = 0;
							var mg3Total:Number = 0;
							
							var hw4Total:Number = 0;
							var hr4Total:Number = 0;
							var m4Total:Number = 0;
							var mg4Total:Number = 0;
							
							var hw5Total:Number = 0;
							var hr5Total:Number = 0;
							var m5Total:Number = 0;
							var mg5Total:Number = 0;
							
							var hrhwTotal:Number = 0;
							var mTotal:Number = 0;
							var mgTotal:Number = 0;
							
							for(var indi=1;indi<=5;indi++) {
								for(var i=0;i<who_safety.length ;i++) {
									for(var j=0;j<professionCompliance.length;j++) {
										if(professionCompliance[j].prof == who_safety[i].prof && int(who_safety[i].indi) == indi) {
											professionCompliance[j]['hr'+indi] = Number(professionCompliance[j]['hr'+indi]) + Number(who_safety[i].hr);
											professionCompliance[j]['hw'+indi] = Number(professionCompliance[j]['hw'+indi]) + Number(who_safety[i].hw);
											if(Number(who_safety[i].glove)==1&&Number(who_safety[i].missed)==1){
												professionCompliance[j]['glove'+indi] = Number(professionCompliance[j]['glove'+indi]) + Number(who_safety[i].glove);
											}
											if(Number(who_safety[i].glove)==0&&Number(who_safety[i].missed)==1){
												professionCompliance[j]['missed'+indi] = Number(professionCompliance[j]['missed'+indi]) + Number(who_safety[i].missed);
											}
										}
									}
								}
								
								for(var j=0;j<professionCompliance.length;j++) {
									professionCompliance[j].totalhwhr  += Number(professionCompliance[j]['hr'+indi]) + Number(professionCompliance[j]['hw'+indi]);
									professionCompliance[j].totalmiss += Number(professionCompliance[j]['missed'+indi]);
									professionCompliance[j].totalmisswithglove += Number(professionCompliance[j]['glove'+indi]);
									
									var comply:Number = (Number(professionCompliance[j].totalhwhr) * 100)/(Number(professionCompliance[j].totalhwhr)+Number(professionCompliance[j].totalmiss)+Number(professionCompliance[j].totalmisswithglove));
									var noncomply:Number = 100 - comply;
									
									comply = Math.round(comply * 100)/100;
									noncomply = Math.round(noncomply * 100)/100;
									
									professionCompliance[j].comply = comply;
									professionCompliance[j].noncomply = noncomply;
									
//									professionCompliance[j].comply = comply.toString().search('.')==-1?comply.toString()+".00":comply;
//									professionCompliance[j].noncomply = noncomply.toString().search('.')==-1?noncomply.toString()+".00":noncomply;
								}

							//End Complaince
							}
							
							//calculating bottom total n compliance
							for(var j=0;j<professionCompliance.length;j++) {
								hw1Total += Number(professionCompliance[j].hw1);
								hr1Total += Number(professionCompliance[j].hr1);
								m1Total += Number(professionCompliance[j].missed1);
								mg1Total += Number(professionCompliance[j].glove1);
								
								hw2Total += Number(professionCompliance[j].hw2);
								hr2Total += Number(professionCompliance[j].hr2);
								m2Total += Number(professionCompliance[j].missed2);
								mg2Total += Number(professionCompliance[j].glove2);
								
								hw3Total += Number(professionCompliance[j].hw3);
								hr3Total += Number(professionCompliance[j].hr3);
								m3Total += Number(professionCompliance[j].missed3);
								mg3Total += Number(professionCompliance[j].glove3);
								
								hw4Total += Number(professionCompliance[j].hw4);
								hr4Total += Number(professionCompliance[j].hr4);
								m4Total += Number(professionCompliance[j].missed4);
								mg4Total += Number(professionCompliance[j].glove4);
								
								hw5Total += Number(professionCompliance[j].hw5);
								hr5Total += Number(professionCompliance[j].hr5);
								m5Total += Number(professionCompliance[j].missed5);
								mg5Total += Number(professionCompliance[j].glove5);
								
								hrhwTotal += Number(professionCompliance[j].totalhwhr);
								mTotal += Number(professionCompliance[j].totalmiss);
								mgTotal += Number(professionCompliance[j].totalmisswithglove);
							}
							
							lblHw1.text = hw1Total.toString();
							lblHr1.text = hr1Total.toString();
							lblMiss1.text = m1Total.toString();
							lblMissWithGlove1.text = mg1Total.toString();
//							
							lblHw2.text = hw2Total.toString();
							lblHr2.text = hr2Total.toString();
							lblMiss2.text = m2Total.toString();
							lblMissWithGlove2.text = mg2Total.toString();
							
							lblHw3.text = hw3Total.toString();
							lblHr3.text = hr3Total.toString();
							lblMiss3.text = m3Total.toString();
							lblMissWithGlove3.text = mg3Total.toString();
							
							lblHw4.text = hw4Total.toString();
							lblHr4.text = hr4Total.toString();
							lblMiss4.text = m4Total.toString();
							lblMissWithGlove4.text = mg4Total.toString();
							
							lblHw5.text = hw5Total.toString();
							lblHr5.text = hr5Total.toString();
							lblMiss5.text = m5Total.toString();
							lblMissWithGlove5.text = mg5Total.toString();
//							
							lblTotalHwHr.text =  hrhwTotal.toString();
							lblTotalM.text = mTotal.toString();
							lblTotalMWithGlove.text = mgTotal.toString();
							
							var totCom:Number = Math.round((hrhwTotal * 100)/(hrhwTotal+mTotal+mgTotal)* 100)/100;
							lblTotalComply.text = totCom.toString();
							lblTotalNonComply.text = (Math.round((100 - totCom) * 100)/100).toString();
//							
							var hwhr1:Number = Math.round(((hw1Total + hr1Total)/(hw1Total + hr1Total + m1Total + mg1Total))*100 * 100)/100;
							lblHwHr1.text = hwhr1.toString();
							lblMissPect1.text = (Math.round((100 - hwhr1) * 100)/100).toString();
							
							var hwhr2:Number = Math.round(((hw2Total + hr2Total)/(hw2Total + hr2Total + m2Total + mg2Total))*100 * 100)/100;
							lblHwHr2.text = hwhr2.toString();
							lblMissPect2.text = (Math.round((100 - hwhr2) * 100)/100).toString();
							
							var hwhr3:Number = Math.round(((hw3Total + hr3Total)/(hw3Total + hr3Total + m3Total + mg3Total))*100 * 100)/100;
							lblHwHr3.text = hwhr3.toString();
							lblMissPect3.text = (Math.round((100 - hwhr3) * 100)/100).toString();
							
							var hwhr4:Number = Math.round(((hw4Total + hr4Total)/(hw4Total + hr4Total + m4Total + mg4Total))*100 * 100)/100;
							lblHwHr4.text = hwhr4.toString();
							lblMissPect4.text = (Math.round((100 - hwhr4) * 100)/100).toString();
							
							var hwhr5:Number = Math.round(((hw5Total + hr5Total)/(hw5Total + hr5Total + m5Total + mg5Total))*100 * 100)/100;
							if(!hwhr5){hwhr5=0;}
							lblHwHr5.text = hwhr5.toString();
							if(!(m5Total+mg5Total)){
								lblMissPect5.text = String(0);
							}
							else{
								lblMissPect5.text = (Math.round((100 - hwhr5) * 100)/100).toString();
							}			
						
						} 
						acAllNodes = professionCompliance;
						var v:Vector.<int> = new Vector.<int>(acAllNodes.length);
						for(var i=0; i<acAllNodes.length; i++)
						{
							arrFlag[acAllNodes[i].prof] = true;
							v[i] = i;
						}
						dataGrid.dataProvider = professionCompliance;
						dataGrid.selectedIndices = v;
//					}catch(error:Error){
//						trace("Err: " + error.toString());
//						//ta.text += error.toString();
					}
//				}
			}
			
		]]>
	</fx:Script>
	
	
	<!--<s:actionContent>
		<s:Button label="Filter..." id="btnFilter" click="clickHandler(event);"/>
	</s:actionContent>-->
	
	<s:BorderContainer id="pnl" x="0" y="0" width="100%" height="100%" borderColor="#FFFFFF">
		<s:Rect id="rect" top="0" bottom="0" right="0" left="0">
			<s:fill>
				<s:SolidColor color="#E0E0E0" alpha="0.5"/>
			</s:fill>
		</s:Rect>
		<s:DataGrid id="dataGrid" x="0" y="67" width="1275" height="413" selectionMode="multipleRows"
					fontSize="12" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" click="eventGrid(event)">
			<s:columns>
				<s:ArrayList>
					
					<s:GridColumn dataField="prof" headerText="Profession" itemRenderer="renderer.GridNumber" width="170" />
					<s:GridColumn dataField="hw1" headerText="HW" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="hr1" headerText="HR" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="missed1" headerText="M" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="glove1" headerText="M+G" itemRenderer="renderer.GridNumber" width="40" />
					
					<s:GridColumn dataField="hw2" headerText="HW" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="hr2" headerText="HR" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="missed2" headerText="M" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="glove2" headerText="M+G" itemRenderer="renderer.GridNumber" width="40" />
					
					<s:GridColumn dataField="hw3" headerText="HW" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="hr3" headerText="HR" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="missed3" headerText="M" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="glove3" headerText="M+G" itemRenderer="renderer.GridNumber" width="40" />
					
					<s:GridColumn dataField="hw4" headerText="HW" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="hr4" headerText="HR" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="missed4" headerText="M" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="glove4" headerText="M+G" itemRenderer="renderer.GridNumber" width="40" />
					
					<s:GridColumn dataField="hw5" headerText="HW" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="hr5" headerText="HR" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="missed5" headerText="M" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="glove5" headerText="M+G" itemRenderer="renderer.GridNumber" width="40" />
					
					<s:GridColumn dataField="totalhwhr" headerText="HW+HR" itemRenderer="renderer.GridNumber" width="65" />
					<s:GridColumn dataField="totalmiss" headerText="M" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="totalmisswithglove" headerText="M+G" itemRenderer="renderer.GridNumber" width="40" />
					<s:GridColumn dataField="comply" headerText="COMPLY" itemRenderer="renderer.GridNumber" width="65" />
					<s:GridColumn dataField="noncomply" headerText="NON-COMPLY" itemRenderer="renderer.GridNumber" width="80" />
					
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<s:Label x="171" y="20" width="162" height="39" fontSize="12" fontWeight="bold"
				 text="Before touching a patient" textAlign="center" verticalAlign="top"/>
		<s:Label x="490" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
		<s:Label x="330" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
		<s:Label x="331" y="7" width="162" height="52" fontSize="12" fontWeight="bold"
				 text="Before clean/aseptic procedure" textAlign="center" verticalAlign="middle"/>
		<s:Label x="651" y="6" width="3" height="60" backgroundColor="#D2D2D2"/>
		<s:Label x="492" y="9" width="162" height="50" fontSize="12" fontWeight="bold"
				 text="After body fluid exposure risk" textAlign="center" verticalAlign="middle"/>
		<s:Label x="811" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
		<s:Label x="652" y="20" width="163" height="37" fontSize="12" fontWeight="bold"
				 text="After touching a patient" textAlign="center" verticalAlign="top"/>
		<s:Label x="970" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
		<!--<s:Label x="1272" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>-->
		<s:Label x="811" y="10" width="163" height="49" fontSize="12" fontWeight="bold"
				 text="After touching patient surroundings" textAlign="center" verticalAlign="middle"/>
		<s:Label x="170" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
		<s:Label x="1115" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
		<s:Label x="1272" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
		<s:Label x="988" y="20" width="108" height="28" fontSize="14" fontWeight="bold" text="Total"
				 textAlign="center" verticalAlign="top"/>
		<s:Label x="1117" y="19" width="164" height="28" fontSize="14" fontWeight="bold"
				 text="Percentage (%)" textAlign="center"/>
		
		<s:Label x="117" y="488" fontSize="14" fontWeight="bold" text="TOTAL"/>
		<s:Label x="44" y="513" fontSize="14" fontWeight="bold" text="COMPLIANCE (%)"/>
		<s:Image x="171" y="479" height="54" scaleMode="stretch" smooth="true" smoothingQuality="high"
				 source="asset/images/footer_calc.jpg"/>
		<s:Label id="lblTotalMWithGlove" x="1075" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissWithGlove5" x="930" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissWithGlove4" x="770" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissWithGlove3" x="609" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissWithGlove2" x="449" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissWithGlove1" x="291" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHw1" x="170" y="479" width="42" height="29" fontSize="13" fontWeight="bold" text="0"
				 textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHr1" x="210" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMiss1" x="251" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHw2" x="330" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHr2" x="370" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMiss2" x="410" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHw3" x="490" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHr3" x="530" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMiss3" x="570" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHw4" x="650" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHr4" x="691" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMiss4" x="731" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHw5" x="811" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHr5" x="850" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMiss5" x="890" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHwHr1" x="171" y="507" width="82" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHwHr3" x="491" y="507" width="82" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHwHr4" x="651" y="507" width="82" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHwHr5" x="810" y="507" width="82" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblHwHr2" x="331" y="507" width="82" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissPect1" x="250" y="507" width="83" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissPect2" x="411" y="506" width="82" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissPect3" x="571" y="507" width="83" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissPect4" x="730" y="507" width="84" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblMissPect5" x="890" y="507" width="83" height="25" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblTotalHwHr" x="972" y="479" width="65" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblTotalM" x="1035" y="479" width="42" height="29" fontSize="13" fontWeight="bold"
				 text="0" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblTotalComply" x="1116" y="479" width="65" height="29" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label id="lblTotalNonComply" x="1181" y="479" width="91" height="29" fontSize="13" fontWeight="bold"
				 text="%" textAlign="center" verticalAlign="middle"/>
		<s:Label x="170" y="5" width="3" height="60" backgroundColor="#D2D2D2"/>
	</s:BorderContainer>
	
</s:NavigatorContent>
